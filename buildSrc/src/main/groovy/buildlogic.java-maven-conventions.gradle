plugins {
    id 'maven-publish'
    id 'java-library'
}


configurations {
    include
    implementation.extendsFrom(include)
    compileOnly.canBeResolved = true
}

repositories {
    mavenCentral()

    repositories {
        maven {
            name "Jitpack"
            url "https://jitpack.io/"
        }
    }
}

tasks.register("sourcesJar", Jar) {
    archiveClassifier.set("sources")
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    archiveBaseName = project.plugin_name

    from {
        configurations.include.filter {
            parent.subprojects.buildDir.path.any { it2 -> it.path.startsWith(it2) }
        }.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.register("shadowJar", Jar) {
    archiveClassifier.set("")
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
    archiveBaseName = project.plugin_name

    from {
        configurations.include.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jar.enabled = false

java {
    withSourcesJar()
}

publishing {
    repositories {
        maven {
            name = "gpr"
            url = uri("https://maven.pkg.github.com/" + (project.findProperty("gr") ?: System.getenv("GITHUB_REPOSITORY")))
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GPR_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GPR_TOKEN")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = project.group
            artifactId = project.artifact
            version = project.version

            artifact(tasks.named("sourcesJar")) {
                classifier "sources"
                extension "jar"
            }
            artifact(tasks.named("shadowJar")) {
                classifier ""
                extension "jar"
            }
        }
    }
}
